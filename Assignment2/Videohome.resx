<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IgCIiAIiIAiIgCIiA//Z
</value>
  </data>
</root>